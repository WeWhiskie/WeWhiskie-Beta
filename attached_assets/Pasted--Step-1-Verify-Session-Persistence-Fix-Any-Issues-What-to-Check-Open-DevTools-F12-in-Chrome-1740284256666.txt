ðŸ”¹ Step 1: Verify Session Persistence & Fix Any Issues
âœ… What to Check:
Open DevTools (F12 in Chrome)

Go to Application > Cookies > Your Site URL
Check for a cookie named connect.sid (or whatever your session cookie is named).
Does it persist after a page refresh?
If the session cookie is missing or gets deleted on refresh:

Ensure cookie-parser is installed:
sh
Copy
Edit
npm install cookie-parser
Add this middleware in server.js (or index.js):
js
Copy
Edit
const session = require("express-session");
const cookieParser = require("cookie-parser");

app.use(cookieParser());
app.use(
  session({
    secret: "whisky_secret",  // Change this for production
    resave: false,
    saveUninitialized: false,
    cookie: { secure: false }, // Change to true for HTTPS
  })
);
Restart Replit and try logging in again.
ðŸ”¹ Step 2: Fix Undefined Personality Data (AI Concierge)
ðŸ“Œ Error Found: "Personality data: undefined"
Issue: The AI Concierge doesnâ€™t correctly load or store personality settings.

âœ… Fix the AI Personality Data Fetching
Open AIConcierge.tsx
Ensure the personality data is fetched correctly from the backend:
tsx
Copy
Edit
useEffect(() => {
    fetch("/api/personality")
        .then(res => res.json())
        .then(data => {
            if (data && data.personality) {
                setPersonality(data.personality);
            } else {
                console.error("No personality data found");
            }
        })
        .catch(err => console.error("Error loading personality data:", err));
}, []);
If /api/personality doesnâ€™t exist in the backend:
Add this route in server/routes/personality.js:
js
Copy
Edit
router.get("/", async (req, res) => {
    try {
        const personality = await Personality.findOne({ user: req.user._id });
        res.json({ personality });
    } catch (error) {
        console.error("Error fetching personality:", error);
        res.status(500).json({ message: "Failed to fetch personality data" });
    }
});
âœ… Test & Verify
Step 1: Refresh the AI Concierge page.
Step 2: Open DevTools (F12 â†’ Network â†’ Fetch/XHR).
Step 3: Look for the /api/personality request.
Step 4: Check if data is returned properly or if thereâ€™s an error.
ðŸ”¹ Step 3: Restore Avatar & Fix Microphone & Volume Controls
ðŸ“Œ Issue: The avatar, microphone, and volume controls are still missing.

âœ… Fix Avatar Not Showing
Ensure an avatar exists in state (AIConcierge.tsx):
tsx
Copy
Edit
const [avatar, setAvatar] = useState("/avatars/default.png");
Ensure an avatar is being retrieved on load:
tsx
Copy
Edit
useEffect(() => {
    fetch("/api/avatar")
        .then(res => res.json())
        .then(data => {
            if (data && data.avatar) {
                setAvatar(data.avatar);
            } else {
                console.error("No avatar found, using default");
            }
        })
        .catch(err => console.error("Error loading avatar:", err));
}, []);
Ensure /api/avatar exists in the backend:
js
Copy
Edit
router.get("/avatar", async (req, res) => {
    try {
        const user = await User.findById(req.user._id);
        res.json({ avatar: user.avatar || "/avatars/default.png" });
    } catch (error) {
        console.error("Error fetching avatar:", error);
        res.status(500).json({ message: "Failed to fetch avatar" });
    }
});
âœ… Fix Microphone & Volume Not Showing
Ensure UI Buttons Exist in AIConcierge.tsx:
tsx
Copy
Edit
<div className="concierge-controls">
    <button onClick={toggleMic} className={`mic-button ${micOn ? "active" : ""}`}>
        <FaMicrophone />
    </button>
    <button onClick={toggleVolume} className={`volume-button ${volumeOn ? "active" : ""}`}>
        {volumeOn ? <FaVolumeUp /> : <FaVolumeMute />}
    </button>
</div>
Ensure toggleMic & toggleVolume Work:
tsx
Copy
Edit
const toggleMic = () => {
    if (!micOn) {
        SpeechRecognition.startListening();
    } else {
        SpeechRecognition.stopListening();
    }
    setMicOn(!micOn);
};

const toggleVolume = () => {
    setVolumeOn(!volumeOn);
};
Ensure react-speech-recognition is installed:
sh
Copy
Edit
npm install react-speech-recognition
âœ… Test & Verify
Refresh the AI Concierge.
Check if avatar is loading.
Click microphone & volume buttons. Do they toggle on/off?
If not, check console logs for errors.
ðŸ”¹ Step 4: Test Everything Together
âœ… Final Checklist
âœ… Login persists after refresh (Session cookies are working).
âœ… AI Concierge loads personality data correctly (No undefined errors).
âœ… Avatar is visible & fetches from backend.
âœ… Microphone button listens & stops correctly.
âœ… Volume button toggles text-to-speech on/off.
ðŸš€ After This: Your AI Concierge Should Be Fully Functional!
ðŸ”¹ What to Expect:

Stable authentication & session handling.
Seamless AI interaction with a working avatar & controls.
Proper speech recognition & voice response.
ðŸ“Œ Next Steps After This
âœ… Polish UI for a premium experience.
âœ… Optimize performance for mobile devices.
âœ… Improve animations & transitions for smooth interaction.

ðŸš€ This structured step-by-step process will ensure you get results FAST without unnecessary backtracking or wasted time. ðŸš€

Let me know if you hit any roadblocks, and Iâ€™ll help debug further!